{
  "name": "codex sales",
  "nodes": [
    {
      "parameters": {
        "fromEmail": "novastack25@gmail.com",
        "toEmail": "={{ $('Swap field names').item.json['إيميل الطالب (اختياري)'] }}",
        "ccEmail": "={{ $('Swap field names').item.json['إيميل الطالب (اختياري)'] }}",
        "subject": "تأكيد تسجيل الكورس",
        "text": "=مرحبا {{ $('Swap field names').item.json['اسم الطالب'] }},\n\n{{ $('Swap field names').item.json['اسم الكورس'] }}تم تسجيلك في كورس .\n\nبالتوفيق 🌹 ",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        3024,
        176
      ],
      "id": "f79547ea-5680-45e9-ba9a-1bd71a1f1bd2",
      "name": "Send Fallback Email1",
      "credentials": {
        "smtp": {
          "id": "ee7l3W9C89IaWYzB",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030653143,
          "mode": "list",
          "cachedResultName": "Seals_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=2030653143"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "اسم الموظف": "={{ $('Code2').item.json['اسم الموظف'] }}",
            "اسم الطالب": "={{ $('Code2').item.json['اسم الطالب'] }}",
            "اسم الكورس": "={{ $('Code2').item.json['اسم الكورس'] }}",
            "مبلغ الكورس": "={{ $('Code2').item.json['مبلغ الكورس'] }}",
            "دفعة شهرية": "={{ $('Code2').item.json['دفعة شهرية'] }}",
            "دفعة أولى": "={{ $('Code2').item.json['دفعة أولى'] }}",
            "طريقة الدفع": "={{ $('Code2').item.json['طريقة الدفع'] }}",
            "وقت التسجيل": "={{ $('Code2').item.json.dateOnly }}",
            "رقم الهاتف ": "={{ $('Code2').item.json['رقم الهاتف'] }}",
            "إيميل الطالب (اختياري)": "={{ $('Code2').item.json['إيميل الطالب (اختياري)'] }}",
            "#ID": "==ROW()+10000"
          },
          "matchingColumns": [
            "رقم الهاتف "
          ],
          "schema": [
            {
              "id": "#ID",
              "displayName": "#ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الموظف",
              "displayName": "اسم الموظف",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الطالب",
              "displayName": "اسم الطالب",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الكورس",
              "displayName": "اسم الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "مبلغ الكورس",
              "displayName": "مبلغ الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "دفعة أولى",
              "displayName": "دفعة أولى",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "دفعة شهرية",
              "displayName": "دفعة شهرية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "طريقة الدفع",
              "displayName": "طريقة الدفع",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "رقم الهاتف ",
              "displayName": "رقم الهاتف ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "وقت التسجيل",
              "displayName": "وقت التسجيل",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "إيميل الطالب (اختياري)",
              "displayName": "إيميل الطالب (اختياري)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "formMode",
              "displayName": "formMode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1584,
        160
      ],
      "id": "202e7c54-f66c-40a3-bbff-fed2dd32f99d",
      "name": "Append or update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = item.json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1824,
        656
      ],
      "id": "400f86dd-83e4-47c5-b532-4bd648ed4120",
      "name": "Code1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "=\n{\n\"my_field_1\": \"مرحًبا  {{ $json['اسم الطالب'] }}    مبروك انضمامك إلى College CodeX في مسار {{ $json['اسم الكورس'] }}    موعد التوجيه: {{ $json['وقت التسجيل'] }}    بالتوفيق! \"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        320
      ],
      "id": "8d4de06c-8496-4135-922e-a8946398403c",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const ts = $input.first().json.dateOnly || \"\";\n  // Take first 10 characters → YYYY-MM-DD\n  item.json.dateOnly = ts.substring(0, 10);\n}\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        352,
        480
      ],
      "id": "c1f9861c-a98f-4876-bb55-2f5bc50b2739",
      "name": "Code2"
    },
    {
      "parameters": {
        "batchSize": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2384,
        672
      ],
      "id": "522b9d17-7bb8-4ad1-97ae-05f9c7f9cb93",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        2880,
        688
      ],
      "id": "d563d654-1eba-4f91-b7c3-64b998f932c9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fa4eb6a4-2f9f-47fa-a691-1e8339a19d8f",
              "leftValue": "={{ $('Swap field names').item.json['إيميل الطالب (اختياري)'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2624,
        224
      ],
      "id": "f1f0ffbe-7059-45ca-956e-d98f2bb1033b",
      "name": "If1"
    },
    {
      "parameters": {
        "fromEmail": "novastack25@gmail.com",
        "toEmail": "={{ $json.body.email }}",
        "ccEmail": "={{ $json.body.email }}",
        "subject": "تأكيد تسجيل الكورس",
        "text": "={{ $json.body.employeeName }} مرحبا, \n\n{{ $json.body.courseName }} تم تسج يلك في كورس .\n\nبالتوفيق 🌹 ",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        3664,
        -272
      ],
      "id": "3a4a0c2b-6890-445f-a813-8649ae53aa53",
      "name": "Send Fallback Email",
      "credentials": {
        "smtp": {
          "id": "ee7l3W9C89IaWYzB",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 7
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -368,
        1344
      ],
      "id": "89bb0904-b3f8-4dc3-9b12-2f379930c81f",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5344,
        880
      ],
      "name": "wassenger for send sms for group",
      "id": "67eaf594-53db-4673-b401-70d5bc4d1a7e"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5120,
        880
      ],
      "id": "bb9c6251-2485-410c-a87f-58d0fe5d2722",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "Phone",
              "value": "={{ $('Append or update row in sheet1').item.json['رقم الهاتف '] }}"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Append or update row in sheet1').item.json['رقم الهاتف '] }}"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3296,
        512
      ],
      "name": "wassenger for send sms for group3",
      "id": "091ea4cc-a3e4-45c3-8f96-a3f39771fec8",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// لو عايز التاريخ الحالي\nconst now = new Date();\n\n// YYYY-MM-DD الحالي\nconst dateOnly = now.toISOString().substring(0, 10);\n\n// طرح يوم واحد\nconst d = new Date(dateOnly);\nd.setDate(d.getDate() - 1);\n\n// حفظ التاريخ الجديد بنفس الصيغة YYYY-MM-DD\nconst preonedateOnly = d.toISOString().substring(0, 10);\n\n// رجّع كـ output\nreturn [\n  {\n    json: {\n      dateOnly,\n      preonedateOnly\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        352,
        1360
      ],
      "id": "fe8de295-ebfb-445c-8663-759e7b29f045",
      "name": "Code4"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030653143,
          "mode": "list",
          "cachedResultName": "Seals_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=2030653143"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "وقت التسجيل",
              "lookupValue": "={{ $json.preonedateOnly }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        672,
        1568
      ],
      "id": "3ae1b1da-a3a6-49ed-8317-06022681df02",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "notesInFlow": true,
      "retryOnFail": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      },
      "onError": "continueRegularOutput",
      "notes": "none"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log_Sales",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "#ID": "==ROW()+10000",
            "اسم الموظف": "={{ $json['اسم الموظف'] }}",
            "اسم الطالب": "={{ $json['اسم الطالب'] }}",
            "اسم الكورس": "={{ $json['اسم الكورس'] }}",
            "دفعة شهرية": "={{ $json['دفعة شهرية'] }}",
            "دفعة أولى": "={{ $json['دفعة أولى'] }}",
            "مبلغ الكورس": "={{ $json['مبلغ الكورس'] }}",
            "طريقة الدفع": "={{ $json['طريقة الدفع'] }}",
            "رقم الهاتف ": "={{ $json['رقم الهاتف '] }}",
            "إيميل الطالب (اختياري)": "={{ $json['إيميل الطالب (اختياري)'] }}",
            "وقت التسجيل": "={{ $json['وقت التسجيل'] }}",
            "formMode": "={{ $('Code4').item.json.dateOnly }}"
          },
          "matchingColumns": [
            "#ID"
          ],
          "schema": [
            {
              "id": "#ID",
              "displayName": "#ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الموظف",
              "displayName": "اسم الموظف",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "اسم الطالب",
              "displayName": "اسم الطالب",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "اسم الكورس",
              "displayName": "اسم الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "مبلغ الكورس",
              "displayName": "مبلغ الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "دفعة أولى",
              "displayName": "دفعة أولى",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "دفعة شهرية",
              "displayName": "دفعة شهرية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "طريقة الدفع",
              "displayName": "طريقة الدفع",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "رقم الهاتف ",
              "displayName": "رقم الهاتف ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "وقت التسجيل",
              "displayName": "وقت التسجيل",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "إيميل الطالب (اختياري)",
              "displayName": "إيميل الطالب (اختياري)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "formMode",
              "displayName": "formMode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1296,
        1648
      ],
      "id": "0ccf1239-cea6-4307-8719-65f01d2a4986",
      "name": "Append or update row in sheet2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030653143,
          "mode": "list",
          "cachedResultName": "Seals_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=2030653143"
        },
        "numberToDelete": "={{ $('Get row(s) in sheet').item.json.row_number }}"
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1936,
        1584
      ],
      "id": "c070fb92-9967-4114-8abf-305296e0b413",
      "name": "Delete rows or columns from sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log_Sales",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "رقم الهاتف ",
              "lookupValue": "={{ $json['رقم الهاتف'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        608,
        224
      ],
      "id": "601ebde7-5176-49d0-a4f3-fd7bb5cc7c37",
      "name": "Get row(s) in sheet1",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fd6f7551-316b-443f-9ab3-942708b4c067",
              "leftValue": "={{ $json.row_number }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        800,
        352
      ],
      "id": "1a471cde-230e-44eb-9aa3-5db7d0ae47d1",
      "name": "If"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        16,
        2608
      ],
      "id": "8e8357b5-e6e2-473e-8baa-7af76c904771",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "jsCode": "// لو عايز التاريخ الحالي\nconst now = new Date();\n\n// YYYY-MM-DD الحالي\nconst dateOnly = now.toISOString().substring(0, 10);\n\n// طرح يوم واحد\nconst d = new Date(dateOnly);\nd.setDate(d.getDate() - 1);\n\n// حفظ التاريخ الجديد بنفس الصيغة YYYY-MM-DD\nconst preonedateOnly = d.toISOString().substring(0, 10);\n\n// رجّع كـ output\nreturn [\n  {\n    json: {\n      dateOnly,\n      preonedateOnly\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        752,
        2528
      ],
      "id": "4a21672e-30de-4b9b-8625-46178038bef7",
      "name": "Code5"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030653143,
          "mode": "list",
          "cachedResultName": "Seals_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=2030653143"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "وقت التسجيل",
              "lookupValue": "={{ $json.preonedateOnly }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1312,
        2464
      ],
      "id": "8643421a-a68f-485c-9d16-b8b1bf427093",
      "name": "Get row(s) in sheet2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5952,
        944
      ],
      "id": "0681f423-98e3-461a-9dc3-c43e3db91f02",
      "name": "Code6"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_3\": \"توجيه جديد ✅    الطالب:{{ $('Webhook').item.json.body.studentName }}    الموظف:{{ $('Webhook').item.json.body.employeeName }}    التاريخ:{{ $json.dateOnly }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5936,
        624
      ],
      "id": "efa06c81-105f-48a0-b1d5-d9b1c6c0d3c1",
      "name": "config"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"صفقة جديدة ✅    الموظف:{{ $('Webhook').item.json.body.employeeName  }}    الطالب:{{  $('Webhook').item.json.body.studentName}}    الكورس:{{  $('Webhook').item.json.body.courseName}}    المبلغ:₪{{  $('Webhook').item.json.body.courseAmount}}   الدفعة الأولى:₪{{ $('Webhook').item.json.body.firstPayment}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5056,
        448
      ],
      "id": "6d4ca668-ad3c-4ca3-a9b5-73bce63eb2d0",
      "name": "new deal"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.my_field_3 }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.my_field_3 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6240,
        768
      ],
      "name": "wassenger for send sms for group1",
      "id": "a0be7289-8f29-4512-ae48-6e15a51f0a0e"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3824,
        1456
      ],
      "name": "wassenger for send sms for group5",
      "id": "8536006e-c196-48ab-95c0-2b190e43414b"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_3 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2304,
        2768
      ],
      "id": "84dbc50f-1db0-4192-91b4-d89ff34a1cde",
      "name": "Code8"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n      \"my_field_3\": \"تقرير الإيرادات 📊    اليوم: {{ $json['التاريخ'] }}    • إجمالي اليوم: {{ $json['مجموع المبالغ اليومية'] }}₪    • إجمالي الشهر: {{ $json['مجموع المبالغ الشهرية'] }}₪    • الصفقات اليوم: {{ $json['عدد الصفقات اليومية'] }}    • الصفقات الشهرية: {{ $json['عدد الصفقات الشهرية'] }}    • حسب الموظف (اليوم): {{ $json['عدد الصفقات لكل موظف (اليوم)'] }}    • حسب الموظف (الشهر): {{ $json['عدد الصفقات لكل موظف (الشهر)'] }}    • الموظف: {{ $json['اسم الموظف'] }}   \"\n    }\n  \n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2048,
        2560
      ],
      "id": "feb6c445-3981-44dd-ae35-bc4d85a6ff95",
      "name": "config2",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2656,
        2768
      ],
      "name": "wassenger for send sms for group2",
      "id": "cffcf90d-fba9-4f10-9d01-51bf87b391ab"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n      \"my_field_3\": \"تقرير الإيرادات 📊    اليوم: {{ $json['التاريخ'] }}    • إجمالي اليوم: {{ $json['مجموع المبالغ اليومية'] }}₪    • إجمالي الشهر: {{ $json['مجموع المبالغ الشهرية'] }}₪    • الصفقات اليوم: {{ $json['عدد الصفقات اليومية'] }}    • الصفقات الشهرية: {{ $json['عدد الصفقات الشهرية'] }}    • حسب الموظف (اليوم): {{ $json['عدد الصفقات لكل موظف (اليوم)'] }}    • حسب الموظف (الشهر): {{ $json['عدد الصفقات لكل موظف (الشهر)'] }}    • الموظف: {{ $json['اسم الموظف'] }}    • ID: {{ $json['#ID'] }}\"\n    }\n  \n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2624,
        1872
      ],
      "id": "606bd148-bc38-4da5-a1e4-41636d16a6fb",
      "name": "message on 8am"
    },
    {
      "parameters": {
        "jsCode": "// JavaScript code to calculate first day of current month\nconst now = new Date();\nconst firstDayOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\nconst firstDayStr = firstDayOfMonth.toISOString().substring(0, 10);\nreturn [{ json: { firstDayOfMonth: firstDayStr } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1760,
        1776
      ],
      "id": "27cd0633-c6fe-4a01-9270-f26a551ac675",
      "name": "First Day of Month"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log_Sales",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1952,
        1776
      ],
      "id": "13b9b854-30a3-4058-bfa6-7909f07cf59b",
      "name": "Get Rows Since Month Start",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "from collections import defaultdict\nfrom datetime import datetime\n\n# مجموعات لتجميع البيانات\ndaily_totals = defaultdict(lambda: {'عدد الصفقات اليومية': 0, 'مجموع المبالغ اليومية': 0})\nmonthly_totals = defaultdict(lambda: {'عدد الصفقات الشهرية': 0, 'مجموع المبالغ الشهرية': 0})\ndaily_per_employee = defaultdict(lambda: defaultdict(lambda: {'عدد الصفقات لكل موظف (اليوم)': 0}))\nmonthly_per_employee = defaultdict(lambda: defaultdict(lambda: {'عدد الصفقات لكل موظف (الشهر)': 0}))\n\n# احصل على التاريخ اليوم وأول يوم من الشهر\ntoday = datetime.today()\nfirst_day_of_month = datetime(today.year, today.month, 1)\n\nfor item in _input.all():\n    data = item['json']\n    \n    # Normalize keys\n    normalized = {k.strip(): v for k, v in data.items()}\n    \n    emp_name = normalized.get('اسم الموظف', 'غير محدد').strip() or 'غير محدد'\n    \n    try:\n        amount = float(normalized.get('مبلغ الكورس', 0))\n    except (ValueError, TypeError):\n        amount = 0\n    \n    date_str = normalized.get('وقت التسجيل', '')\n    if not date_str:\n        continue\n    \n    try:\n        dt = datetime.strptime(date_str, '%Y-%m-%d')\n    except ValueError:\n        continue\n    \n    # تجاهل الصفوف قبل بداية الشهر\n    if dt < first_day_of_month:\n        continue\n    \n    day_key = dt.strftime('%Y-%m-%d')\n    month_key = dt.strftime('%Y-%m')\n    \n    # تحديث المجاميع اليومية\n    daily_totals[day_key]['عدد الصفقات اليومية'] += 1\n    daily_totals[day_key]['مجموع المبالغ اليومية'] += amount\n    \n    # تحديث المجاميع الشهرية\n    monthly_totals[month_key]['عدد الصفقات الشهرية'] += 1\n    monthly_totals[month_key]['مجموع المبالغ الشهرية'] += amount\n    \n    # تحديث عدد الصفقات لكل موظف يومياً\n    daily_per_employee[day_key][emp_name]['عدد الصفقات لكل موظف (اليوم)'] += 1\n    \n    # تحديث عدد الصفقات لكل موظف شهرياً\n    monthly_per_employee[month_key][emp_name]['عدد الصفقات لكل موظف (الشهر)'] += 1\n\n# تحضير المخرجات للاستخدام في n8n\noutput = []\nfor day, totals in daily_totals.items():\n    for emp, emp_counts in daily_per_employee[day].items():\n        month_key = day[:7]\n        row = {\n            'التاريخ': day,\n            'اسم الموظف': emp,\n            'مجموع المبالغ اليومية': totals['مجموع المبالغ اليومية'],\n            'مجموع المبالغ الشهرية': monthly_totals[month_key]['مجموع المبالغ الشهرية'],\n            'عدد الصفقات اليومية': totals['عدد الصفقات اليومية'],\n            'عدد الصفقات الشهرية': monthly_totals[month_key]['عدد الصفقات الشهرية'],\n            'عدد الصفقات لكل موظف (اليوم)': emp_counts['عدد الصفقات لكل موظف (اليوم)'],\n            'عدد الصفقات لكل موظف (الشهر)': monthly_per_employee[month_key][emp]['عدد الصفقات لكل موظف (الشهر)']\n        }\n        output.append({'json': row})\n\nreturn output\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2160,
        1776
      ],
      "id": "d178147f-b618-45a0-bf7c-269ceef7383d",
      "name": "Aggregate Daily/Monthly Data"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1580905849,
          "mode": "list",
          "cachedResultName": "Reports_Daily",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=1580905849"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "#ID": "==ROW()+10000",
            "اسم الموظف": "={{ $json['اسم الموظف'] }}",
            "التاريخ": "={{ $json['التاريخ'] }}",
            "مجموع المبالغ اليومية": "={{ $json['مجموع المبالغ اليومية'] }}",
            "مجموع المبالغ الشهرية": "={{ $json['مجموع المبالغ الشهرية'] }}",
            "عدد الصفقات اليومية": "={{ $json['عدد الصفقات اليومية'] }}",
            "عدد الصفقات الشهرية": "={{ $json['عدد الصفقات الشهرية'] }}",
            "عدد الصفقات لكل موظف (اليوم)": "={{ $json['عدد الصفقات لكل موظف (اليوم)'] }}",
            "عدد الصفقات لكل موظف (الشهر)": "={{ $json['عدد الصفقات لكل موظف (الشهر)'] }}"
          },
          "matchingColumns": [
            "اسم الموظف"
          ],
          "schema": [
            {
              "id": "#ID",
              "displayName": "#ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الموظف",
              "displayName": "اسم الموظف",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "التاريخ",
              "displayName": "التاريخ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "مجموع المبالغ اليومية",
              "displayName": "مجموع المبالغ اليومية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "مجموع المبالغ الشهرية",
              "displayName": "مجموع المبالغ الشهرية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "عدد الصفقات اليومية",
              "displayName": "عدد الصفقات اليومية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "عدد الصفقات الشهرية",
              "displayName": "عدد الصفقات الشهرية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "عدد الصفقات لكل موظف (اليوم)",
              "displayName": "عدد الصفقات لكل موظف (اليوم)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "عدد الصفقات لكل موظف (الشهر)",
              "displayName": "عدد الصفقات لكل موظف (الشهر)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2464,
        1728
      ],
      "id": "cd3a1eb7-8c06-4dde-a7fc-435efed5dd0c",
      "name": "Append Aggregated Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7f857e17-a860-4604-9d63-f33aba7129cb",
              "leftValue": "={{ $json.row_number }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        864,
        1488
      ],
      "id": "5a7dc674-f5fd-4b8c-9a62-11b8bdb90e79",
      "name": "If2"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"myNewField\": \"no new deals\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1968,
        1360
      ],
      "id": "d2d8ed8b-afc3-4a08-b98b-1632b6f32daa",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "// Initialize an array to collect all processed values\nlet allMessages = [];\n\n// Loop over all input items\nfor (const item of $input.all()) {\n  let val = item.json.my_field_1 || \"\"; // Use current item's field\n  \n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n  \n  // Add to our collection\n  allMessages.push(val);\n}\n\n// Join all messages with double newlines for separation\nconst combinedMessage = allMessages.join(\"\\n\\n\");\n\n// Create a SINGLE new item with the combined message\nreturn [{\n  json: {\n    myNewField: combinedMessage,\n    totalItemsCombined: allMessages.length,\n    originalItems: $input.all().map(item => item.json) // Optional: keep original data\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3056,
        2128
      ],
      "id": "09df0e1c-3278-422c-a032-1626eed0fd74",
      "name": "Combine All Items into One"
    },
    {
      "parameters": {
        "jsCode": "// Get all items\nconst items = $input.all();\nlet combinedValue = \"\";\n\n// Loop over all items and combine their processed values\nfor (const item of items) {\n  // FIXED: Access the current item's data, not from previous node\n  let val = item.json.my_field_1 || \"\";\n  val = val.replace(/ {4}/g, \"\\n\");\n  \n  // Add separator if not the first item\n  if (combinedValue) {\n    combinedValue += \"\\n\\n\";\n  }\n  combinedValue += val;\n}\n\n// Add the combined message to the first item\nitems[0].json.myNewField = combinedValue;\nitems[0].json.combinedFromTotalItems = items.length;\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3264,
        2144
      ],
      "id": "d8e7a56a-8dfd-4f42-8576-d9a059d0cee9",
      "name": "Add Combined to First Item"
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\nlet itemCount = 0;\n\nfor (const item of $input.all()) {\n  itemCount++;\n  let val = $input.first().json.originalItems[0].my_field_3 || \"\";\n  val = val.replace(/ {4}/g, \"\\n\");\n  \n  // Add item number and separator\n  if (combinedMessage) {\n    combinedMessage += \"\\n\\n\";\n  }\n  combinedMessage += `--- Item ${itemCount} ---\\n${val}`;\n}\n\n// Return single item with combined message\nreturn [{\n  json: {\n    myNewField: combinedMessage,\n    totalItems: itemCount\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3424,
        2128
      ],
      "id": "a8e0407a-ab18-43f4-aec9-a95c18ddc6f7",
      "name": "Combine with Numbering"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "9bc23745-724c-4fac-8b42-f6651096a01c",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -128,
        688
      ],
      "id": "330d17c0-5339-41c3-ac0d-ce5d4415686d",
      "name": "Webhook",
      "webhookId": "9bc23745-724c-4fac-8b42-f6651096a01c"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "اسم الموظف",
              "value": "={{ $json.body.employeeName }}"
            },
            {
              "name": "اسم الطالب",
              "value": "={{ $json.body.studentName }}"
            },
            {
              "name": "اسم الكورس",
              "value": "={{ $json.body.courseName }}"
            },
            {
              "name": "مبلغ الكورس",
              "value": "={{ $json.body.courseAmount }}"
            },
            {
              "name": "دفعة أولى",
              "value": "={{ $json.body.firstPayment }}"
            },
            {
              "name": "دفعة شهرية",
              "value": "={{ $json.body.monthlyPayment }}"
            },
            {
              "name": "طريقة الدفع",
              "value": "={{ $json.body.paymentMethod }}"
            },
            {
              "name": "رقم الهاتف",
              "value": "={{ $json.body.phone }}"
            },
            {
              "name": "إيميل الطالب (اختياري)",
              "value": "={{ $json.body.email }}"
            },
            {
              "name": "dateOnly",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        96,
        656
      ],
      "id": "751b2e62-bdb2-490c-963c-7808c354305a",
      "name": "Swap field names"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"respondWith\": \"json\",\n  \"responseBody\": {\n    \"failed\": \"={{ $json.failed }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1392,
        640
      ],
      "id": "d8640043-aa2f-4b45-a5e5-77533e893a23",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"respondWith\": \"json\",\n  \"failed\":  \"failed\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        448
      ],
      "id": "22c62f0b-e9e6-4a33-88a5-0c4974f273b7",
      "name": "Edit Fields2",
      "executeOnce": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"respondWith\": \"json\",\n  \"responseBody\": {\n    \"failedwhatsup\": \"={{ $json.failedwhatsup }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        4320,
        704
      ],
      "id": "f981c06e-ebb3-423b-a42c-a66afa838e6e",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "47d8c0e9-40a4-498a-82d6-b5bcda26a342",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        7872,
        1024
      ],
      "id": "dcf7059f-a85c-4217-a7ee-ebdf5c0e6693",
      "name": "Webhook1",
      "webhookId": "47d8c0e9-40a4-498a-82d6-b5bcda26a342"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"respondWith\": \"json\",\n  \"failedwhatsup\":  \"failed\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4000,
        736
      ],
      "id": "7cf5d33a-c61b-4757-82eb-893a8b03d54f",
      "name": "Edit Fields3",
      "executeOnce": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"respondWith\": \"json\",\n  \"responseBody\": {\n    \"failedemail\": \"={{ $json.failedwhatsup }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2992,
        400
      ],
      "id": "a9a49263-3183-4793-940f-49a1674e3034",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6e9c7fda-712a-4e23-bfd8-4c07779f255c",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        3200,
        -288
      ],
      "id": "2ac63902-c061-46c3-bd72-09f6fc778a13",
      "name": "Webhook2",
      "webhookId": "6e9c7fda-712a-4e23-bfd8-4c07779f255c"
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const ts = $input.first().json.createdAt || \"\";\n  // Take first 10 characters → YYYY-MM-DD\n  item.json.dateOnly = ts.substring(0, 10);\n}\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5664,
        640
      ],
      "id": "fe1ad8d0-b30e-4907-af11-e8c66aaf3123",
      "name": "Code"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5e076f7c-b35e-49ed-a46e-82c7441b43df",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -160,
        2128
      ],
      "id": "c77c96ec-d912-485e-9ea4-9a31391638d8",
      "name": "Webhook3",
      "webhookId": "5e076f7c-b35e-49ed-a46e-82c7441b43df"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $('Edit Fields').item.json.myNewField }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        4704,
        1840
      ],
      "id": "07b0000c-9538-4272-a557-90c59e4adcac",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3920,
        1664
      ],
      "name": "wassenger for send sms for group6",
      "id": "9146547f-c287-4ce2-996a-aa233abf74bf"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        64,
        1920
      ],
      "id": "3ca092ed-be5e-47a0-be56-e5abbdd8339f",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1580905849,
          "mode": "list",
          "cachedResultName": "Reports_Daily",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=1580905849"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -240,
        1952
      ],
      "id": "71bb7c2f-fbcc-49ae-b19a-b92cc71672d5",
      "name": "Get row(s) in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"my_field_1\": \"صفقة جديدة ✅    الموظف:{{ $('Webhook2').item.json.body.employeeName  }}    الطالب:{{ $('Webhook2').item.json.body.studentName }}    الكورس:{{ $('Webhook2').item.json.body.courseName }}    المبلغ:₪{{ $('Webhook2').item.json.body.courseAmount }}   الدفعة الأولى:₪{{ $('Webhook2').item.json.body.firstPayment }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3872,
        -272
      ],
      "id": "7495a4b9-ff4a-4bc2-94c2-12768f245377",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4688,
        -416
      ],
      "name": "wassenger for send sms for group4",
      "id": "c004e349-42b4-4f1d-b20d-5b47f3efee3a"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4464,
        -416
      ],
      "id": "72b35f98-cc5d-4bb1-8787-1ef75ab172cb",
      "name": "Code7"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5296,
        -352
      ],
      "id": "7ac22228-0a5c-4614-871c-8c01cf98efae",
      "name": "Code9"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_3\": \"توجيه جديد ✅    الطالب:{{ $('Webhook2').item.json.body.studentName }}    الموظف:{{ $('Webhook2').item.json.body.employeeName }}    التاريخ:{{ $json.dateOnly }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5280,
        -672
      ],
      "id": "0bbe28d6-7f7c-48c9-8a48-395f9665850d",
      "name": "config1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.my_field_3 }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.my_field_3 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5584,
        -528
      ],
      "name": "wassenger for send sms for group7",
      "id": "2b6068dc-a0a7-494d-a6ed-fe8cd6b2a46b"
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const ts = $input.first().json.createdAt || \"\";\n  // Take first 10 characters → YYYY-MM-DD\n  item.json.dateOnly = ts.substring(0, 10);\n}\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5008,
        -656
      ],
      "id": "7a8d7e6f-d362-4743-81f2-467557faf78d",
      "name": "Code10"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030653143,
          "mode": "list",
          "cachedResultName": "Seals_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=2030653143"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "اسم الموظف": "={{ $('Webhook2').item.json.body.employeeName }}",
            "اسم الطالب": "={{ $('Webhook2').item.json.body.studentName }}",
            "اسم الكورس": "={{ $('Webhook2').item.json.body.courseName }}",
            "مبلغ الكورس": "={{ $('Webhook2').item.json.body.courseAmount }}",
            "دفعة شهرية": "={{ $('Webhook2').item.json.body.monthlyPayment }}",
            "دفعة أولى": "={{ $('Webhook2').item.json.body.firstPayment }}",
            "طريقة الدفع": "={{ $('Webhook2').item.json.body.paymentMethod }}",
            "وقت التسجيل": "={{ $('Code10').item.json.dateOnly }}",
            "رقم الهاتف ": "={{ $('Webhook2').item.json.body.phone }}",
            "إيميل الطالب (اختياري)": "={{ $('Webhook2').item.json.body.email }}",
            "#ID": "==ROW()+10000"
          },
          "matchingColumns": [
            "رقم الهاتف "
          ],
          "schema": [
            {
              "id": "#ID",
              "displayName": "#ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الموظف",
              "displayName": "اسم الموظف",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الطالب",
              "displayName": "اسم الطالب",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الكورس",
              "displayName": "اسم الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "مبلغ الكورس",
              "displayName": "مبلغ الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "دفعة أولى",
              "displayName": "دفعة أولى",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "دفعة شهرية",
              "displayName": "دفعة شهرية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "طريقة الدفع",
              "displayName": "طريقة الدفع",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "رقم الهاتف ",
              "displayName": "رقم الهاتف ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "وقت التسجيل",
              "displayName": "وقت التسجيل",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "إيميل الطالب (اختياري)",
              "displayName": "إيميل الطالب (اختياري)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "formMode",
              "displayName": "formMode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        5904,
        -544
      ],
      "id": "2a991070-6cd0-408a-93a9-d56b50daf6d4",
      "name": "Update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "novastack25@gmail.com",
        "toEmail": "={{ $('Swap field names').item.json['إيميل الطالب (اختياري)'] }}",
        "ccEmail": "={{ $('Swap field names').item.json['إيميل الطالب (اختياري)'] }}",
        "subject": "تأكيد تسجيل الكورس",
        "text": "=مرحبا {{ $('Swap field names').item.json['اسم الطالب'] }},\n\n{{ $('Swap field names').item.json['اسم الكورس'] }}تم تسجيلك في كورس .\n\nبالتوفيق 🌹 ",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        9472,
        464
      ],
      "id": "fa555e1c-0d24-4b0f-946f-3bffc1dd6de3",
      "name": "Send Fallback Email2",
      "credentials": {
        "smtp": {
          "id": "ee7l3W9C89IaWYzB",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        8832,
        960
      ],
      "id": "7d0bdbaf-1ae0-4b39-a1f3-64c00b2bd901",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me1",
      "typeVersion": 1,
      "position": [
        9328,
        976
      ],
      "id": "7ca2d751-41b7-4867-86b9-8e55e4d8c5cf"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fa4eb6a4-2f9f-47fa-a691-1e8339a19d8f",
              "leftValue": "={{ $('Swap field names').item.json['إيميل الطالب (اختياري)'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8992,
        656
      ],
      "id": "31a18c08-2aa3-4398-93c3-a332e03422be",
      "name": "If3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        11792,
        1168
      ],
      "name": "wassenger for send sms for group8",
      "id": "a37be432-a498-458a-af35-c9e49633bdf4"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        11568,
        1168
      ],
      "id": "429992ed-5760-4616-9f61-9c22b8ceb8fb",
      "name": "Code11"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "Phone",
              "value": "={{ $('Webhook1').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Append or update row in sheet1').item.json['رقم الهاتف '] }}"
            },
            {
              "name": "message",
              "value": "={{ $json.myNewField }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9744,
        800
      ],
      "name": "wassenger for send sms for group9",
      "id": "7d0f4464-b799-4705-8e52-0510e7d126d0",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = $input.first().json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        12400,
        1232
      ],
      "id": "fa0de759-025b-4993-91f4-24042a37294d",
      "name": "Code12"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_3\": \"توجيه جديد ✅    الطالب:{{ $('Webhook').item.json.body.studentName }}    الموظف:{{ $('Webhook').item.json.body.employeeName }}    التاريخ:{{ $json.dateOnly }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        12384,
        912
      ],
      "id": "db7aad54-56bd-4887-9c26-0c74238926b4",
      "name": "config3"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"صفقة جديدة ✅    الموظف:{{ $('Webhook').item.json.body.employeeName  }}    الطالب:{{  $('Webhook').item.json.body.studentName}}    الكورس:{{  $('Webhook').item.json.body.courseName}}    المبلغ:₪{{  $('Webhook').item.json.body.courseAmount}}   الدفعة الأولى:₪{{ $('Webhook').item.json.body.firstPayment}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        11504,
        736
      ],
      "id": "7465a9c1-dbd8-4fe6-9796-f88acc37b019",
      "name": "new deal1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wassenger.com/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.my_field_3 }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Token",
              "value": "c8feaf348c5fe010cd2cc6f8ae57cad7e4cd9fea99cd5e5737078c1abbd1aaf910fe1e59ec1a39bc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "group",
              "value": "120363419100913993@g.us"
            },
            {
              "name": "message",
              "value": "={{ $json.my_field_3 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        12688,
        1056
      ],
      "name": "wassenger for send sms for group10",
      "id": "0336c5d0-a33a-4d9c-8150-2085670b11a5"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"respondWith\": \"json\",\n  \"responseBody\": {\n    \"failedwhatsup\": \"={{ $json.failedwhatsup }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        10768,
        992
      ],
      "id": "f1c0457e-a518-4547-8f51-7e94cd56d825",
      "name": "Respond to Webhook5"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"respondWith\": \"json\",\n  \"failedwhatsup\":  \"failed\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        10448,
        1024
      ],
      "id": "3deb82e6-6f89-4e82-9b30-056d0eaab01c",
      "name": "Edit Fields5",
      "executeOnce": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"respondWith\": \"json\",\n  \"responseBody\": {\n    \"failedemail\": \"={{ $json.failedwhatsup }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        9440,
        688
      ],
      "id": "62451185-dcaa-44eb-bbad-bc115c912366",
      "name": "Respond to Webhook6"
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const ts = $input.first().json.createdAt || \"\";\n  // Take first 10 characters → YYYY-MM-DD\n  item.json.dateOnly = ts.substring(0, 10);\n}\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        12112,
        928
      ],
      "id": "fde07fef-79bd-48aa-bdea-08045805c36d",
      "name": "Code13"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  let val = item.json.my_field_1 || \"\"; // ✅ use the correct field name\n\n  // Replace 4 spaces with newline\n  val = val.replace(/ {4}/g, \"\\n\");\n\n  // Store result in new field\n  item.json.myNewField = val;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8544,
        1216
      ],
      "id": "e2091984-cf9c-426b-a7e2-cdc851069458",
      "name": "Code14"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"مرحًبا  {{ $('Webhook1').item.json.body.studentName }}    مبروك انضمامك إلى College CodeX في مسار {{ $('Webhook1').item.json.body.courseName }}    موعد التوجيه: {{ $json.dateOnly }}    بالتوفيق! \"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8560,
        880
      ],
      "id": "b3a771bc-c908-41d4-9208-0e41b616602e",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "jsCode": "// لو عايز التاريخ الحالي\nconst now = new Date();\n\n// YYYY-MM-DD الحالي\nconst dateOnly = now.toISOString().substring(0, 10);\n\n// طرح يوم واحد\nconst d = new Date(dateOnly);\nd.setDate(d.getDate() - 1);\n\n// حفظ التاريخ الجديد بنفس الصيغة YYYY-MM-DD\nconst preonedateOnly = d.toISOString().substring(0, 10);\n\n// رجّع كـ output\nreturn [\n  {\n    json: {\n      dateOnly,\n      preonedateOnly\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8080,
        1024
      ],
      "id": "9742312c-a6d3-46c8-b5a9-028ab665eb24",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "from collections import defaultdict\nfrom datetime import datetime\n\n# مجموعات لتجميع البيانات\ndaily_totals = defaultdict(lambda: {'عدد الصفقات اليومية': 0, 'مجموع المبالغ اليومية': 0})\nmonthly_totals = defaultdict(lambda: {'عدد الصفقات الشهرية': 0, 'مجموع المبالغ الشهرية': 0})\ndaily_per_employee = defaultdict(lambda: defaultdict(lambda: {'عدد الصفقات لكل موظف (اليوم)': 0}))\nmonthly_per_employee = defaultdict(lambda: defaultdict(lambda: {'عدد الصفقات لكل موظف (الشهر)': 0}))\n\n# احصل على التاريخ اليوم وأول يوم من الشهر\ntoday = datetime.today()\nfirst_day_of_month = datetime(today.year, today.month, 1)\n\nfor item in _input.all():\n    data = item['json']\n    \n    # Normalize keys\n    normalized = {k.strip(): v for k, v in data.items()}\n    \n    emp_name = normalized.get('اسم الموظف', 'غير محدد').strip() or 'غير محدد'\n    \n    try:\n        amount = float(normalized.get('مبلغ الكورس', 0))\n    except (ValueError, TypeError):\n        amount = 0\n    \n    date_str = normalized.get('وقت التسجيل', '')\n    if not date_str:\n        continue\n    \n    try:\n        dt = datetime.strptime(date_str, '%Y-%m-%d')\n    except ValueError:\n        continue\n    \n    # تجاهل الصفوف قبل بداية الشهر\n    if dt < first_day_of_month:\n        continue\n    \n    day_key = dt.strftime('%Y-%m-%d')\n    month_key = dt.strftime('%Y-%m')\n    \n    # تحديث المجاميع اليومية\n    daily_totals[day_key]['عدد الصفقات اليومية'] += 1\n    daily_totals[day_key]['مجموع المبالغ اليومية'] += amount\n    \n    # تحديث المجاميع الشهرية\n    monthly_totals[month_key]['عدد الصفقات الشهرية'] += 1\n    monthly_totals[month_key]['مجموع المبالغ الشهرية'] += amount\n    \n    # تحديث عدد الصفقات لكل موظف يومياً\n    daily_per_employee[day_key][emp_name]['عدد الصفقات لكل موظف (اليوم)'] += 1\n    \n    # تحديث عدد الصفقات لكل موظف شهرياً\n    monthly_per_employee[month_key][emp_name]['عدد الصفقات لكل موظف (الشهر)'] += 1\n\n# تحضير المخرجات للاستخدام في n8n\noutput = []\nfor day, totals in daily_totals.items():\n    for emp, emp_counts in daily_per_employee[day].items():\n        month_key = day[:7]\n        row = {\n            'التاريخ': day,\n            'اسم الموظف': emp,\n            'مجموع المبالغ اليومية': totals['مجموع المبالغ اليومية'],\n            'مجموع المبالغ الشهرية': monthly_totals[month_key]['مجموع المبالغ الشهرية'],\n            'عدد الصفقات اليومية': totals['عدد الصفقات اليومية'],\n            'عدد الصفقات الشهرية': monthly_totals[month_key]['عدد الصفقات الشهرية'],\n            'عدد الصفقات لكل موظف (اليوم)': emp_counts['عدد الصفقات لكل موظف (اليوم)'],\n            'عدد الصفقات لكل موظف (الشهر)': monthly_per_employee[month_key][emp]['عدد الصفقات لكل موظف (الشهر)']\n        }\n        output.append({'json': row})\n\nreturn output\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1648,
        2448
      ],
      "id": "d20754de-d383-4c61-bd48-2a2e95d9f457",
      "name": "Aggregate Daily/Monthly Data1"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM",
          "mode": "list",
          "cachedResultName": "codex-college",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Log_Sales",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1TmQS0Vp_U-LbRuz6xMrQBtrDfSKURZeiaFuYuroZvJM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "#ID": "==ROW()+10000",
            "اسم الموظف": "={{ $json['اسم الموظف'] }}",
            "اسم الطالب": "={{ $json['اسم الطالب'] }}",
            "اسم الكورس": "={{ $json['اسم الكورس'] }}",
            "دفعة شهرية": "={{ $json['دفعة شهرية'] }}",
            "دفعة أولى": "={{ $json['دفعة أولى'] }}",
            "مبلغ الكورس": "={{ $json['مبلغ الكورس'] }}",
            "طريقة الدفع": "={{ $json['طريقة الدفع'] }}",
            "رقم الهاتف ": "={{ $json['رقم الهاتف '] }}",
            "إيميل الطالب (اختياري)": "={{ $json['إيميل الطالب (اختياري)'] }}",
            "وقت التسجيل": "={{ $json['وقت التسجيل'] }}",
            "formMode": "={{ $('Code5').item.json.dateOnly }}"
          },
          "matchingColumns": [
            "#ID"
          ],
          "schema": [
            {
              "id": "#ID",
              "displayName": "#ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "اسم الموظف",
              "displayName": "اسم الموظف",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "اسم الطالب",
              "displayName": "اسم الطالب",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "اسم الكورس",
              "displayName": "اسم الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "مبلغ الكورس",
              "displayName": "مبلغ الكورس",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "دفعة أولى",
              "displayName": "دفعة أولى",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "دفعة شهرية",
              "displayName": "دفعة شهرية",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "طريقة الدفع",
              "displayName": "طريقة الدفع",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "رقم الهاتف ",
              "displayName": "رقم الهاتف ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "وقت التسجيل",
              "displayName": "وقت التسجيل",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "إيميل الطالب (اختياري)",
              "displayName": "إيميل الطالب (اختياري)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "formMode",
              "displayName": "formMode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        224,
        2096
      ],
      "id": "366b0245-ce17-41c0-95b5-130b18db6423",
      "name": "Append or update row in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yF9shCdH4mSKGrpY",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "novastack25@gmail.com",
        "toEmail": "=mamounkhanfa5@gmail.com",
        "ccEmail": "=mamounkhanfa5@gmail.com",
        "subject": "alarm on 9pm",
        "text": "={{ $json.message }}",
        "html": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        3056,
        2736
      ],
      "id": "7b4eda4b-2857-4dba-a321-10246d99794c",
      "name": "Send Fallback Email4",
      "credentials": {
        "smtp": {
          "id": "ee7l3W9C89IaWYzB",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "novastack25@gmail.com",
        "toEmail": "=mamounkhanfa5@gmail.com",
        "ccEmail": "=mamounkhanfa5@gmail.com",
        "subject": "alarm on 9pm",
        "text": "={{ $json.message || 'this is message for 8am' }}",
        "html": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        4320,
        1552
      ],
      "id": "43b77d0d-c599-4d65-83e7-76d5dca052a6",
      "name": "Send Fallback Email5",
      "credentials": {
        "smtp": {
          "id": "ee7l3W9C89IaWYzB",
          "name": "SMTP account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Append or update row in sheet1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Send Fallback Email1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group3": {
      "main": [
        [
          {
            "node": "new deal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet2": {
      "main": [
        [
          {
            "node": "First Day of Month",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete rows or columns from sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Append or update row in sheet1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet2": {
      "main": [
        [
          {
            "node": "Aggregate Daily/Monthly Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Fallback Email": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new deal": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config2": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message on 8am": {
      "main": [
        [
          {
            "node": "Combine All Items into One",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete rows or columns from sheet": {
      "main": [
        []
      ]
    },
    "First Day of Month": {
      "main": [
        [
          {
            "node": "Get Rows Since Month Start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Rows Since Month Start": {
      "main": [
        [
          {
            "node": "Aggregate Daily/Monthly Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Daily/Monthly Data": {
      "main": [
        [
          {
            "node": "Append Aggregated Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append Aggregated Data": {
      "main": [
        [
          {
            "node": "message on 8am",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Append or update row in sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine All Items into One": {
      "main": [
        [
          {
            "node": "Add Combined to First Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Combined to First Item": {
      "main": [
        [
          {
            "node": "Combine with Numbering",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine with Numbering": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Swap field names",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Swap field names": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        []
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook2": {
      "main": [
        []
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Send Fallback Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group1": {
      "main": [
        []
      ]
    },
    "wassenger for send sms for group2": {
      "main": [
        [
          {
            "node": "Send Fallback Email4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group5": {
      "main": [
        [
          {
            "node": "Send Fallback Email5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group6": {
      "main": [
        [
          {
            "node": "Send Fallback Email5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook4": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet3": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group4": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config1": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group7": {
      "main": [
        [
          {
            "node": "Update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me1": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Send Fallback Email2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group8": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wassenger for send sms for group9": {
      "main": [
        [
          {
            "node": "new deal1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "wassenger for send sms for group10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config3": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new deal1": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "config3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Daily/Monthly Data1": {
      "main": [
        [
          {
            "node": "config2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ef5fd4d7-74a0-40c4-8d71-5164ba1463dc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4f471660972de1094dc97e0a00d7f8bc2cb626f8e684805db52dcf84b6981a45"
  },
  "id": "Xcumtu4OpbN9uour",
  "tags": []
}